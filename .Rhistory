setwd("D:/CEU/winter semester/data-analysis-3/da3_assignment1/codes")
data <- read.csv("../data/raw/listings.csv")
View(data)
data[1,]
some <- data[1,]
View(some)
summary(data)
# some <- data[1,]
# summary(data)
str(data)
glimpse(data)
library(tidyverse)
glimpse(data)
?glimpse()
data <- read.csv("../data/raw/listings.csv")
View(data)
View(data)
# CHANGE TO YOUR WORKING DIRECTORY
# setwd("")
getwd()
setwd("D:/CEU/winter semester/data-analysis-3/da3_assignment1/")
setwd("D:/CEU/winter semester/data-analysis-3/")
# CHANGE TO YOUR WORKING DIRECTORY
# setwd("")
getwd()
dir = "da3_assignment1"
#location folders
data_in  <- paste0(dir,"/raw/")
data_out <- paste0(dir,"/clean/")
library(tidyverse)
data <- read.csv("data/raw/listings.csv")
rm(data)
data <- read.csv("/data/raw/listings.csv")
data <- read.csv(paste0(data_in,"listings.csv"))
#location folders
data_in  <- paste0(dir,"data/raw/")
data <- read.csv(paste0(data_in,"listings.csv"))
#location folders
data_in  <- paste0(dir,"/data/raw/")
data <- read.csv(paste0(data_in,"listings.csv"))
drops <- c("host_thumbnail_url","host_picture_url","listing_url","thumbnail_url","medium_url","picture_url","xl_picture_url","host_url","last_scraped","description", "experiences_offered", "neighborhood_overview", "notes", "transit", "access", "interaction", "house_rules", "host_about", "host_response_time", "name", "summary", "space", "host_location")
drops <- c("host_thumbnail_url","host_picture_url","listing_url","thumbnail_url","medium_url","picture_url","xl_picture_url","host_url","last_scraped","description", "experiences_offered", "neighborhood_overview", "notes", "transit", "access", "interaction", "house_rules", "host_about", "host_response_time", "name", "summary", "space", "host_location")
data<-data[ , !(names(data) %in% drops)]
write.csv(data,file=paste0(data_in,"airbnb_ny_listing.csv"))
# opening dataset
df < -read.csv(paste0(data_in,"airbnb_ny_listing.csv"),
sep=",",header = TRUE, stringsAsFactors = FALSE)
# opening dataset
df <- read.csv(paste0(data_in,"airbnb_ny_listing.csv"),
sep=",",header = TRUE, stringsAsFactors = FALSE)
View(df)
#drop broken lines - where id is not a character of numbers
df$junk<-grepl("[[:alpha:]]", df$id)
df<-subset(df,df$junk==FALSE)
View(df)
df<-df[1:ncol(df)-1]
View(df)
#remove percentage signs
for (perc in c("host_response_rate","host_acceptance_rate")){
df[[perc]]<-gsub("%","",as.character(df[[perc]]))
}
#remove dollar signs from price variables
for (pricevars in c("price", "weekly_price","monthly_price","security_deposit","cleaning_fee","extra_people")){
df[[pricevars]]<-gsub("\\$","",as.character(df[[pricevars]]))
df[[pricevars]]<-as.numeric(as.character(df[[pricevars]]))
}
#remove dollar signs from price variables
for (pricevars in c("price")){
df[[pricevars]]<-gsub("\\$","",as.character(df[[pricevars]]))
df[[pricevars]]<-as.numeric(as.character(df[[pricevars]]))
}
#format binary variables
for (binary in c("host_is_superhost","host_has_profile_pic","host_identity_verified","instant_bookable")){
df[[binary]][df[[binary]]=="f"] <- 0
df[[binary]][df[[binary]]=="t"] <- 1
}
View(df)
#amenities
df$amenities<-gsub("\\[","",df$amenities)
df$amenities<-gsub("\\]","",df$amenities)
df$amenities<-gsub('\\"',"",df$amenities)
df$amenities<-as.list(strsplit(df$amenities, ","))
#define levels and dummies
levs <- levels(factor(unlist(df$amenities)))
levs
df<-cbind(df,as.data.frame(do.call(rbind, lapply(lapply(df$amenities, factor, levs), table))))
drops <- c("amenities")
df<-df[ , !(names(df) %in% drops)]
#write csv
write.csv(df,file=paste0(data_out,"airbnb_ny_cleaned.csv"))
data_out <- paste0(dir,"/data/clean/")
#write csv
write.csv(df,file=paste0(data_out,"airbnb_ny_cleaned.csv"))
View(df)
View(df)
to_filter <- sapply(data, function(x) sum(is.na(x)))
to_filter[to_filter > 0]
##  bathrooms - 36923, bedrooms - 3588
# beds - 477
data$license
unique(data[c("license")])
# opening dataset
df <- read.csv(paste0(data_in,"airbnb_ny_listing.csv"),
sep=",",header = TRUE, stringsAsFactors = FALSE)
#drop broken lines - where id is not a character of numbers
df$junk<-grepl("[[:alpha:]]", df$id)
df<-subset(df,df$junk==FALSE)
df<-df[1:ncol(df)-1]
#remove percentage signs
for (perc in c("host_response_rate","host_acceptance_rate")){
df[[perc]]<-gsub("%","",as.character(df[[perc]]))
}
#remove dollar signs from price variables
for (pricevars in c("price")){
df[[pricevars]]<-gsub("\\$","",as.character(df[[pricevars]]))
df[[pricevars]]<-as.numeric(as.character(df[[pricevars]]))
}
#format binary variables
for (binary in c("host_is_superhost","host_has_profile_pic","host_identity_verified","instant_bookable")){
df[[binary]][df[[binary]]=="f"] <- 0
df[[binary]][df[[binary]]=="t"] <- 1
}
View(df)
df$amenities<-gsub("\\[","",df$amenities)
df$amenities<-gsub("\\]","",df$amenities)
df$amenities<-gsub('\\"',"",df$amenities)
df$amenities<-as.list(strsplit(df$amenities, ","))
#define levels and dummies
levs <- levels(factor(unlist(df$amenities)))
something <- cbind(df,as.data.frame(do.call(rbind, lapply(lapply(df$amenities, factor, levs), table))))
levs
View(something)
something2 <- df
something2$amenities
something2$soap <- ifelse('soap' %in% something2$amenities, 1, 0)
View(something2)
# something2$soap <- ifelse('soap' %in% something2$amenities, 1, 0)
something2$stove <- ifelse('Stove' %in% something2$amenities, 1, 0)
x = strsplit(something2$amenities, ",")
levs
for element in something2$amenities{
something2$someitem <- element
}
for (element in something2$amenities){
something2$someitem <- element
}
for (element in 1:length(something2$amenities)){
print(something2$amenities[element])
}
for (element in 1:3){
print(something2$amenities[element])
}
typeof(something2$amenities)
for (element in 1:3){
print(something2$amenities[[1]])
}
print(something2$amenities[[1]])
for (element in 1:length(something2$amenities)){
something2$soap <- ifelse('soap' %in% something2$amenities[[element]], 1, 0)
}
something2$amenities[[1]]
'Oven' %in% something2$amenities[[1]]
' Oven' %in% something2$amenities[[1]]
trimws(something2$amenities[[1]])
for (element in 1:length(something2$amenities)){
something2$amenities <- trimws(something2$amenities[[element]])
}
for (element in 1:length(something2$amenities)){
something2$amenities[[element]] <- trimws(something2$amenities[[element]])
}
for (element in 1:length(something2$amenities)){
something2$soap <- ifelse('soap' %in% something2$amenities[[element]], 1, 0)
}
' Oven' %in% something2$amenities[[1]]
'Oven' %in% something2$amenities[[1]]
'water' %in% something2$amenities[[1]]
' water' %in% something2$amenities[[1]]
'Hot water' %in% something2$amenities[[1]]
str_detect(something2$amenities[[1]], 'Hot water')
str_detect(something2$amenities[[1]], ' water')
str_detect(something2$amenities[[1]], 'water')
str_detect(something2$amenities[[1]], 'Water')
something2$amenities[[1]]
tolower(something2$amenities[[1]])
str_detect(something2$amenities[[1]], 'Hot')
str_detect(something2$amenities[[1]], 'hot')
str_detect(tolower(something2$amenities[[1]]), 'hot')
result <- str_detect(tolower(something2$amenities[[1]]), 'hot')
any(result, na.rm = FALSE)
result <- str_detect(tolower(something2$amenities[[1]]), 'stove')
any(result, na.rm = FALSE)
if(any(result, na.rm = FALSE)){
print("hey")
}
for (element in 1:length(something2$amenities)){
result <- str_detect(tolower(something2$amenities[[1]]), 'stove')
something2$soap <- ifelse(any(result, na.rm = FALSE), 1, 0)
}
for (element in 1:length(something2$amenities)){
result <- str_detect(tolower(something2$amenities[[element]]), 'stove')
something2$stove <- ifelse(any(result, na.rm = FALSE), 1, 0)
}
something2$stove <- NA
result <- str_detect(tolower(something2$amenities[[1]]), 'stove')
tolower(something2$amenities[[1]])
result <- str_detect(tolower(something2$amenities[[1]]), 'stove')
result
any(result, na.rm = FALSE)
ifelse(any(result, na.rm = FALSE), 1, 0)
for (element in 1:length(something2$amenities)){
result <- str_detect(tolower(something2$amenities[[element]]), 'stove')
something2$stove[[element]] <- ifelse(any(result, na.rm = FALSE), 1, 0)
}
for (element in 1:length(df$amenities)){
df$amenities[[element]] <- trimws(df$amenities[[element]])
}
View(df)
pre_amenitites <- c("conditioner", "stove", "HDTV", "TV", "conditioning",
"sound system", "refrigerator", "shampoo", "soap",
"oven", "toiletries", "speaker", "fan", "heating",
"breakfast", "table", "dishwasher", "dryer", "elevator",
"fitness", "parking", "garage", "wifi", "game", "garden",
"gym", "restaurant", "bar", "washer")
result <- str_detect(tolower(something2$amenities[[1]]), 'tv')
result
View(something2)
pre_amenitites <- c("conditioner", "stove", "hdtv", "tv", "conditioning",
"sound system", "refrigerator", "shampoo", "soap",
"oven", "toiletries", "speaker", "fan", "heating",
"breakfast", "table", "dishwasher", "dryer", "elevator",
"fitness", "parking", "garage", "wifi", "game", "garden",
"gym", "restaurant", "bar", "washer")
something2$stove <- NA
something2$soap <- NA
print(item)
for (item in pre_amenities) {
print(item)
}
pre_amenitites <- c("conditioner", "stove", "hdtv", "tv", "conditioning",
"sound system", "refrigerator", "shampoo", "soap",
"oven", "toiletries", "speaker", "fan", "heating",
"breakfast", "table", "dishwasher", "dryer", "elevator",
"fitness", "parking", "garage", "wifi", "game", "garden",
"gym", "restaurant", "bar", "washer")
rm(pre_amenitites)
pre_amenities <- c("conditioner", "stove", "hdtv", "tv", "conditioning",
"sound system", "refrigerator", "shampoo", "soap",
"oven", "toiletries", "speaker", "fan", "heating",
"breakfast", "table", "dishwasher", "dryer", "elevator",
"fitness", "parking", "garage", "wifi", "game", "garden",
"gym", "restaurant", "bar", "washer")
print(item)
for (item in pre_amenities) {
print(item)
}
for (element in 1:length(df$amenities)){
result <- str_detect(tolower(df$amenities[[element]]), 'barbecue')
if (ifelse(any(result, na.rm = FALSE), 1, 0) == 1){
print(element)
}
}
for (element in 1:length(df$amenities)){
result <- str_detect(tolower(df$amenities[[element]]), 'barbecue')
counter = 0
if (ifelse(any(result, na.rm = FALSE), 1, 0) == 1){
counter = counter + 1
}
}
counter = 0
for (element in 1:length(df$amenities)){
result <- str_detect(tolower(df$amenities[[element]]), 'barbecue')
if (ifelse(any(result, na.rm = FALSE), 1, 0) == 1){
counter = counter + 1
}
}
counter
counter = 0
# 360 barbeque
counter = 0
for (element in 1:length(df$amenities)){
result <- str_detect(tolower(df$amenities[[element]]), 'bbq')
if (ifelse(any(result, na.rm = FALSE), 1, 0) == 1){
counter = counter + 1
}
}
counter
for (item in pre_amenities) {
for (element in 1:length(something2$amenities)){
result <- str_detect(tolower(something2$amenities[[element]]), item)
something2[item][[element]] <- ifelse(any(result, na.rm = FALSE), 1, 0)
}
}
something2['amenities'][[1]]
something2$amenities[[1]]
something2["amenities"][[1]]
View(something2)
pre_amenities[2]
what <- rep(2, nrow(something2))
something2$pre_amenities[2][[2]]
for(i in 1:length(pre_amenities)) {
new <- rep(i, nrow(something2))
something2[ , ncol(something2) + 1] <- new
colnames(something2)[ncol(something2)] <- pre_amenities[i]  # Rename column name
}
View(something2)
something2 <- df
for (element in 1:length(df$amenities)){
df$amenities[[element]] <- trimws(df$amenities[[element]])
}
View(df)
View(something2)
for (item in pre_amenities) {
for (element in 1:length(something2$amenities)){
result <- str_detect(tolower(something2$amenities[[element]]), item)
something2[item][[element]] <- ifelse(any(result, na.rm = FALSE), 1, 0)
}
}
something2$pre_amenities[2][[2]]
View(something2)
for(i in 1:length(pre_amenities)) {
new <- rep(i, nrow(something2))
something2[ , ncol(something2) + 1] <- new
colnames(something2)[ncol(something2)] <- pre_amenities[i]  # Rename column name
}
View(something2)
for (item in pre_amenities) {
for (element in 1:length(something2$amenities)){
result <- str_detect(tolower(something2$amenities[[element]]), item)
something2[item][[element]] <- ifelse(any(result, na.rm = FALSE), 1, 0)
}
}
something2 <- df
for (row in 1:3) {
price <- something2[row, "amenities"]
print(price)
}
for (row in 1:3) {
one_amenity <- something2[row, "amenities"]
result <- str_detect(tolower(one_amenity), 'stove')
print(ifelse(any(result, na.rm = FALSE), 1, 0))
}
pre_amenities <- c("conditioner", "stove", "hdtv", "tv", "conditioning",
"sound system", "refrigerator", "shampoo", "soap",
"oven", "toiletries", "speaker", "fan", "heating",
"breakfast", "table", "dishwasher", "dryer", "elevator",
"fitness", "parking", "garage", "wifi", "game", "garden",
"gym", "restaurant", "bar", "washer", "barbeque", "bbq")
for(i in 1:length(pre_amenities)) {
new <- rep(i, nrow(something2))
something2[ , ncol(something2) + 1] <- new
colnames(something2)[ncol(something2)] <- pre_amenities[i]  # Rename column name
}
something2 <- df
for (i in pre_amenities){
something2 <-
something2 %>%
mutate(!! i := ifelse(str_detect(amenities, !! i), 1, 0))
}
View(something2)
for (i in pre_amenities){
df <-
df %>%
mutate(!! i := ifelse(str_detect(amenities, !! i), 1, 0))
}
drops <- c("amenities")
something2 <- df[ , !(names(df) %in% drops)]
View(something2)
df <- df[ , !(names(df) %in% drops)]
#write csv
write.csv(df,file=paste0(data_out,"airbnb_ny_cleaned.csv"))
View(df)
table(df$neighbourhood_cleansed)
tail(names(sort(table(df$neighbourhood_cleansed))), 5)
View(data)
View(data)
View(df)
tail(names(sort(table(data$property_type))), 7)
table(data$property_type)
tbl <- table(data$property_type)
tbl[order(-as.numeric(names(tbl)))]
tbl
x <- sort(tbl,decreasing=T)
x
library(kableExtra)
library(huxtable)
some_table <- hux(x)
View(some_table)
properties_hux <- as_hux(x)
properties_hux %>% set_caption("Property types")
some_table
quick_latex(some_table)
getwd()
knitr::opts_chunk$set(echo = TRUE)
```{r comment=''}
getwd()
setwd("D:/CEU/winter semester/data-analysis-3/da3_assignment1/")
getwd()
head(sometable,4)
head(some_table,4)
what <- head(some_table,4)
first_five <- head(some_table,5)
View(first_five)
knitr::opts_chunk$set(echo = TRUE)
# rm(list=ls())
library(tidyverse)
library(stargazer)
library(Hmisc)
library(kableExtra)
library(huxtable)
properties_hux <- head(as_hux(x), 6)
#
#####################
### look at price ###
#####################
summary(data$price)
describe(data$price)
data <- read_csv(paste(data_out,"airbnb_ny_workfile.csv", sep = ""))
data_out <- "data/out/"
data <- read_csv(paste(data_out,"airbnb_ny_workfile.csv", sep = ""))
# 28402 observations decreased to 14170
data <- data %>%
filter(neighbourhood_group_cleansed == "Manhattan")
#
#####################
### look at price ###
#####################
summary(data$price)
#
#####################
### look at price ###
#####################
what <- summary(data$price)
describe(data$price)
getwd()
R_F14_h_lnprice
View(data)
ggplot(data, aes(ln_price)) +
geom_histogram(binwidth = 0.15, fill = color[1], color = color.outline, alpha = 0.8, size = 0.25) +
ylab("Count") +
xlab("Log price") +
theme_bg()
ggplot(data, aes(price)) +
geom_histogram(binwidth = 0.15, fill = color[1], color = color.outline, alpha = 0.8, size = 0.25) +
ylab("Count") +
xlab("Log price") +
theme_bg()
R_F14_h_lnprice <- ggplot(data, aes(price)) +
geom_histogram(binwidth = 0.15, fill = color[1], color = color.outline, alpha = 0.8, size = 0.25) +
ylab("Count") +
xlab("Log price") +
theme_bg()
getwd()
data <- read_csv(paste(data_out,"airbnb_manhattan_work.csv", sep = ""))
setwd("D:/CEU/winter semester/data-analysis-3/da3_assignment1/")
data_out <- "data/out/"
data <- read_csv(paste(data_out,"airbnb_manhattan_work.csv", sep = ""))
file_folder <- "D:/CEU/winter semester/data-analysis-3/da3_assignment1/data/out"
data <- read_csv(paste(file_folder,"/airbnb_manhattan_work.csv", sep = ""))
